// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)

  @@map("session")
}

// Virtual Try-On Models
model TryOnRequest {
  id             String      @id @default(cuid())
  shop           String
  productId      String
  productTitle   String
  productImage   String
  userPhotoUrl   String
  resultImageUrl String?
  status         TryOnStatus @default(PENDING)
  errorMessage   String?
  metadata       Json?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  @@index([shop])
  @@index([status])
  @@index([createdAt])
  @@map("try_on_request")
}

enum TryOnStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

model AppMetadata {
  id                    String    @id @default(cuid())
  shop                  String    @unique
  creditsUsed           Int       @default(0)
  creditsLimit          Int       @default(10)
  productLimit          Int       @default(3)
  isActive              Boolean   @default(true)
  subscriptionCreatedAt DateTime?
  lastResetDate         DateTime  @default(now())
  settings              Json?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("app_metadata")
}

model ProductTryOnSettings {
  id           String   @id @default(cuid())
  shop         String
  productId    String
  productTitle String
  productImage String
  tryOnEnabled Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([shop, productId])
  @@index([shop])
  @@index([tryOnEnabled])
  @@map("product_try_on_settings")
}

// Canned/Pre-selected images that users can choose from
model CannedImage {
  id          String        @id @default(cuid())
  name        String
  imageUrl    String        @unique
  description String?
  gender      String?       // e.g., 'male', 'female', 'unisex'
  isActive    Boolean       @default(true)
  sortOrder   Int           @default(0)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  cachedTryOns CachedTryOn[]

  @@index([isActive])
  @@index([sortOrder])
  @@map("canned_image")
}

// Cached try-on results for canned images + products
model CachedTryOn {
  id              String      @id @default(cuid())
  shop            String
  cannedImageId   String
  productId       String
  productTitle    String
  productImage    String
  resultImageUrl  String
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  cannedImage     CannedImage @relation(fields: [cannedImageId], references: [id], onDelete: Cascade)

  @@unique([shop, cannedImageId, productId])
  @@index([shop])
  @@index([cannedImageId])
  @@index([productId])
  @@map("cached_try_on")
}
